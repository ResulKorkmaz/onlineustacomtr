name: 🚀 Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  REGISTRY: ghcr.io

jobs:
  # Pre-deployment checks
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci --frozen-lockfile

      - name: 🔍 Lint check
        run: npm run lint

      - name: 📝 Type check
        run: npm run typecheck

      - name: 🧪 Run tests
        run: npm run test

      - name: 🏗️ Build check
        run: npm run build

  # Deploy to Vercel
  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: health-check
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci --frozen-lockfile

      - name: 🏗️ Build application
        run: npm run build

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'

  # Post-deployment verification
  verify:
    name: ✅ Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: 🏥 Health check
        run: |
          sleep 30  # Wait for deployment to be ready
          curl -f https://www.onlineusta.com.tr/api/health || exit 1
          echo "✅ Health check passed"

      - name: 🔗 Check main pages
        run: |
          curl -f https://www.onlineusta.com.tr/ || exit 1
          curl -f https://www.onlineusta.com.tr/jobs || exit 1
          curl -f https://www.onlineusta.com.tr/login || exit 1
          echo "✅ Main pages accessible"

  # Create git tag
  tag-release:
    name: 🏷️ Tag Release
    runs-on: ubuntu-latest
    needs: [deploy, verify]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Create tag
        run: |
          TAG_NAME="v$(date +%Y%m%d.%H%M)"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "$TAG_NAME" -m "Production deployment $TAG_NAME"
          git push origin "$TAG_NAME"
          echo "🏷️ Created tag: $TAG_NAME"
